{
  "series": [
    {
      "color": "#0091f7",
      "zIndex": 2,
      "data": [
        [
          2010,
          5.09
        ],
        [
          2011,
          4.85
        ],
        [
          2012,
          4.61
        ],
        [
          2013,
          4.39
        ],
        [
          2014,
          4.17
        ],
        [
          2015,
          4.1
        ],
        [
          2016,
          4.02
        ],
        [
          2017,
          3.9
        ],
        [
          2018,
          3.77
        ],
        [
          2019,
          3.55
        ],
        [
          2020,
          3.31
        ],
        [
          2021,
          null
        ],
        [
          2022,
          null
        ],
        [
          2023,
          null
        ],
        [
          2024,
          null
        ],
        [
          2025,
          null
        ],
        [
          2026,
          null
        ],
        [
          2027,
          null
        ],
        [
          2028,
          null
        ],
        [
          2029,
          null
        ],
        [
          2030,
          null
        ],
        [
          2031,
          null
        ],
        [
          2032,
          null
        ],
        [
          2033,
          null
        ],
        [
          2034,
          null
        ],
        [
          2035,
          null
        ],
        [
          2036,
          null
        ],
        [
          2037,
          null
        ]
      ],
      "name": "Tonnen pro Kopf"
    },
    {
      "type": "line",
      "dashStyle": "ShortDash",
      "color": "#999999",
      "data": [
        [
          2010,
          null
        ],
        [
          2011,
          null
        ],
        [
          2012,
          null
        ],
        [
          2013,
          null
        ],
        [
          2014,
          null
        ],
        [
          2015,
          null
        ],
        [
          2016,
          null
        ],
        [
          2017,
          null
        ],
        [
          2018,
          null
        ],
        [
          2019,
          null
        ],
        [
          2020,
          3.31
        ],
        [
          2021,
          3.16
        ],
        [
          2022,
          3.02
        ],
        [
          2023,
          2.88
        ],
        [
          2024,
          2.73
        ],
        [
          2025,
          2.59
        ],
        [
          2026,
          2.44
        ],
        [
          2027,
          2.3
        ],
        [
          2028,
          2.1
        ],
        [
          2029,
          1.9
        ],
        [
          2030,
          1.7
        ],
        [
          2031,
          1.5
        ],
        [
          2032,
          1.3
        ],
        [
          2033,
          1.225
        ],
        [
          2034,
          1.15
        ],
        [
          2035,
          1.075
        ],
        [
          2036,
          1
        ],
        [
          2037,
          0
        ]
      ],
      "name": "Zielpfad"
    },
    {
      "visible": false,
      "showInLegend": false,
      "data": [
        [
          2010,
          null
        ],
        [
          2011,
          null
        ],
        [
          2012,
          null
        ],
        [
          2013,
          null
        ],
        [
          2014,
          null
        ],
        [
          2015,
          null
        ],
        [
          2016,
          null
        ],
        [
          2017,
          null
        ],
        [
          2018,
          null
        ],
        [
          2019,
          null
        ],
        [
          2020,
          null
        ],
        [
          2021,
          null
        ],
        [
          2022,
          null
        ],
        [
          2023,
          null
        ],
        [
          2024,
          null
        ],
        [
          2025,
          null
        ],
        [
          2026,
          null
        ],
        [
          2027,
          null
        ],
        [
          2028,
          null
        ],
        [
          2029,
          null
        ],
        [
          2030,
          null
        ],
        [
          2031,
          null
        ],
        [
          2032,
          null
        ],
        [
          2033,
          null
        ],
        [
          2034,
          null
        ],
        [
          2035,
          null
        ],
        [
          2036,
          null
        ],
        [
          2037,
          null
        ]
      ],
      "name": "Bewertung"
    }
  ],
  "chart": {
    "type": "line",
    "width": 485,
    "height": 428,
    "spacingBottom": 65,
    "borderColor": "#fbfbfb",
    "backgroundColor": "#fbfbfb",
    "style": {
      "fontFamily": "Arial"
    },
    "zoomType": "xy",
    "panning": true,
    "panKey": "shift",
    "events": {
      "load": function () {
          this.credits.element.onclick = function () { };

          //for top-left legends with no x defined: move legend to x position of first yAxis
          if (this['legend']['options']['align'] == 'left' && this['legend']['options']['verticalAlign'] == 'top' && this['legend']['options']['x'] == 0) {
            this.update(
              {
                legend: {
                  x: this.yAxis[0].left - this.spacingBox.x - this.legend.padding
                }
              }
            );
          }

          this.series[1].points[this.series[1].points.length - 1].update({
            dataLabels: {
              enabled: true,
              y: -60,
              x: -50,
              format: 'Zielwert {key}: {y:,.1f}',
              style: {
                textOutline: false,
                color: "#999999",
              }
            },
            marker: {
              enabled: true
            }
          });

          const chart = this,
            colors = ['#59fb59', '#fbf659', '#fb9999'],
            data = chart.series[0].data,
            assessed = chart.series[2].data;
          data.forEach(function (element, i) {
            if (assessed[i].y !== null) {
              element.update({
                color: colors[assessed[i].y],
                marker: {
                  enabled: true,
                  lineWidth: 1,
                  lineColor: "#0091f7",
                  radius: 3
                }
              });
              if (typeof assessed[i + 1] == 'undefined' || assessed[i + 1].y == null) {
                element.update({
                  marker: {
                    enabled: true,
                    lineWidth: 1,
                    lineColor: "#0091f7",
                    radius: 4.5
                  }
                });
              }
            }
          });
        }
    },
    "renderTo": "container-9674"
  },
  "plotOptions": {
    "series": {
      "marker": {
        "enabled": false,
        "symbol": "circle"
      },
      "connectNulls": true
    }
  },
  "title": {
    "align": "left",
    "style": {
      "fontSize": "14px",
      "fontWeight": "bold",
      "color": "#000000"
    },
    "useHTML": true,
    "text": "CO\u003Csub\u003E2\u003C\u002Fsub\u003E-Emissionen"
  },
  "subtitle": {
    "text": "in Tonnen CO\u003Csub\u003E2\u003C\u002Fsub\u003E-Äquivalente pro Kopf, Basel-Stadt",
    "align": "left",
    "style": {
      "fontSize": "12px",
      "fontWeight": "normal",
      "color": "#000000"
    }
  },
  "xAxis": {
    "lineColor": "#B9CFD7",
    "lineWidth": 0.5,
    "tickLength": 0,
    "uniqueNames": true,
    "title": {
      "style": {
        "color": "#000000"
      }
    },
    "labels": {
      "style": {
        "color": "#000000",
        "textOverflow": "none"
      },
      "step": 1,
      "rotation": -45
    },
    "tickInterval": 1
  },
  "yAxis": {
    "min": 0,
    "gridLineWidth": 0.5,
    "gridLineColor": "#B9CFD7",
    "lineColor": "#B9CFD7",
    "title": {
      "style": {
        "color": "#000000",
        "fontSize": null
      },
      "text": null
    },
    "labels": {
      "style": {
        "color": "#000000"
      }
    }
  },
  "legend": {
    "enabled": true,
    "layout": "horizontal",
    "verticalAlign": "top",
    "align": "left",
    "symbolRadius": 0,
    "itemStyle": {
      "fontWeight": "normal"
    }
  },
  "credits": {
    "enabled": true,
    "style": {
      "color": "#000000",
      "fontSize": "10px",
      "cursor": "default"
    },
    "position": {
      "align": "left",
      "verticalAlign": "bottom",
      "x": 10,
      "y": -35
    },
    "text": "Quelle: Statistisches Amt Basel-Stadt, Energiestatistik;\u003Cbr\u002F\u003EKimaschutzstrategie Kanton Basel-Stadt.\u003Cbr\u002F\u003EZuletzt geändert: 5.2.2024"
  },
  "customFunctions": {
    "optimalAxisLabelDecimals": function (axis, formatString) {

				//see https://forum.highcharts.com/highcharts-usage/how-to-have-all-yaxis-labels-show-same-number-of-decimals-t40826/ 
				//function checks how many decimal places has a number
				var countDecimals = function (value) {
					if ((value % 1) != 0)
						return value.toString().split(".")[1].length;
					return 0;
				};

				var ticks = axis.tickPositions;
				var howManyDecimals = 0;

				//loop looks for the the largest number of decimal places
				ticks.forEach(function (tick) {
					if (countDecimals(tick) > howManyDecimals) {
						howManyDecimals = countDecimals(tick);
					}
				});

				//update labels so they have the same number of decimal places
				axis.chart.update({
					yAxis: [{
						labels: {
							//format: '{value:,.' + howManyDecimals + 'f}',
							format: formatString.replace('howManyDecimals', howManyDecimals),
						}
					}, {
						//second yAxis, if present
					}]
				}, true, true);
			}
  },
  "tooltip": {
    "valueDecimals": 2,
    "pointFormat": "\u003Cspan style=\"color:{series.color}\"\u003E●\u003C\u002Fspan\u003E {series.name}: \u003Cb\u003E{point.y}\u003C\u002Fb\u003E\u003Cbr\u002F\u003E"
  },
  "exporting": {
    "filename": "9674"
  }
}