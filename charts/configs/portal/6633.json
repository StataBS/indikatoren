{
  "series": [
    {
      "data": [
        {
          "name": "Anteil&nbsp;Sozialhilfeempfänger",
          "Wohnviertel": "Breite",
          "y": 12,
          "Wert": 0.04,
          "Jahr": 2024
        },
        {
          "name": "Anteil&nbsp;Ausländer",
          "Wohnviertel": "Breite",
          "y": 9,
          "Wert": 0.3826935449,
          "Jahr": 2024
        },
        {
          "name": "Anteil&nbsp;Personen&nbsp;in Einpersonen-haushalten",
          "Wohnviertel": "Breite",
          "y": 15,
          "Wert": 0.283521543690385,
          "Jahr": 2024
        },
        {
          "name": "Gymnasialquote",
          "Wohnviertel": "Breite",
          "y": 7,
          "Wert": 0.265,
          "Jahr": 2024
        },
        {
          "name": "Altersquotient",
          "Wohnviertel": "Breite",
          "y": 11,
          "Wert": 0.3085440423,
          "Jahr": 2024
        },
        {
          "name": "Anteil&nbsp;Sesshafte",
          "Wohnviertel": "Breite",
          "y": 13,
          "Wert": 0.3184645078,
          "Jahr": 2024
        },
        {
          "name": "Jugendquotient",
          "Wohnviertel": "Breite",
          "y": 9,
          "Wert": 0.2326888118,
          "Jahr": 2024
        },
        {
          "name": "Baujahr&nbsp;Wohngebäude",
          "Wohnviertel": "Breite",
          "y": 15,
          "Wert": 1942.762048192771,
          "Jahr": 2024
        },
        {
          "name": "Anteil Einfamilienhäuser",
          "Wohnviertel": "Breite",
          "y": 9,
          "Wert": 0.129518072289,
          "Jahr": 2024
        },
        {
          "name": "Anteil&nbsp;Grünfläche",
          "Wohnviertel": "Breite",
          "y": 15,
          "Wert": 0.36,
          "Jahr": 2024
        },
        {
          "name": "Fläche&nbsp;pro&nbsp;Wohnung",
          "Wohnviertel": "Breite",
          "y": 9,
          "Wert": 70.853465,
          "Jahr": 2024
        },
        {
          "name": "Wohnfläche&nbsp;pro&nbsp;Kopf",
          "Wohnviertel": "Breite",
          "y": 9,
          "Wert": 39.414367,
          "Jahr": 2024
        },
        {
          "name": "Vermögenssteuer",
          "Wohnviertel": "Breite",
          "y": 5,
          "Wert": 581,
          "Jahr": 2022
        },
        {
          "name": "Einkommenssteuer",
          "Wohnviertel": "Breite",
          "y": 6,
          "Wert": 7866,
          "Jahr": 2022
        },
        {
          "name": "Erwerbstätigenquote",
          "Wohnviertel": "Breite",
          "y": 4,
          "Wert": 0.6953152,
          "Jahr": "2019-2023"
        },
        {
          "name": "Arbeitsplätze&nbsp;pro&nbsp;Kopf",
          "Wohnviertel": "Breite",
          "y": 1,
          "Wert": 0.1234472,
          "Jahr": 2022
        },
        {
          "name": "Arbeitslosenquote",
          "Wohnviertel": "Breite",
          "y": 14,
          "Wert": 4.3,
          "Jahr": 2024
        }
      ],
      "name": "jahr_char",
      "turboThreshold": 0
    }
  ],
  "xAxis": {
    "type": "category",
    "uniqueNames": false,
    "title": {
      "style": {
        "color": "#000000"
      }
    },
    "labels": {
      "style": {
        "color": "#000000",
        "fontSize": "10px"
      },
      "useHTML": false,
      "formatter": function () {
          return (this.value + "").replace(/&nbsp;/g, "\u00A0");
        }
    },
    "tickLength": 0,
    "tickmarkPlacement": "on",
    "lineWidth": 0,
    "tickInterval": 1,
    "gridLineColor": "white"
  },
  "chart": {
    "events": {
      "load": function () {
          this.credits.element.onclick = function () {};
          //draw spider backgrounds
          var top = -Math.PI / 2;
          var endPurple = top + ((2 * Math.PI) / 17) * 7;
          var endGreen = endPurple + ((2 * Math.PI) / 17) * 5;
          var endBlue = top;
          var centerX = 242.5;
          var centerY = 207;
          var radius = 142;

          this.renderer
            .arc(centerX, centerY, radius, 0, top, endPurple)
            .attr({
              fill: "#923F8D",
              stroke: "#923F8D",
              "stroke-width": 0,
              "fill-opacity": 0.5,
            })
            .add();
          this.renderer
            .arc(centerX, centerY, radius, 0, endPurple, endGreen)
            .attr({
              fill: "#68AB2B",
              stroke: "#68AB2B",
              "stroke-width": 0,
              "fill-opacity": 0.5,
            })
            .add();
          this.renderer
            .arc(centerX, centerY, radius, 0, endGreen, endBlue)
            .attr({
              fill: "#689199",
              stroke: "#689199",
              "stroke-width": 0,
              "fill-opacity": 0.5,
            })
            .add();
        }
    },
    "borderColor": "#fbfbfb",
    "backgroundColor": "#fbfbfb",
    "width": 485,
    "height": 428,
    "spacingBottom": 55,
    "marginLeft": 20,
    "style": {
      "fontFamily": "Arial"
    },
    "zoomType": "xy",
    "type": "area",
    "polar": true,
    "renderTo": "container-6633"
  },
  "plotOptions": {
    "area": {
      "lineColor": "white",
      "lineWidth": 0.5
    },
    "series": {
      "lineWidth": 1,
      "color": "#808080",
      "marker": {
        "enabled": false
      },
      "dataLabels": {
        "x": 5,
        "align": "left",
        "verticalAlign": "middle",
        "enabled": false,
        "style": {
          "fontSize": "10px"
        }
      }
    }
  },
  "pane": {},
  "title": {
    "style": {
      "fontSize": "14px",
      "fontWeight": "bold",
      "fontFamily": "Arial",
      "color": "#000000"
    },
    "align": "left",
    "text": "Breite - Quartierradar"
  },
  "subtitle": {
    "style": {
      "fontSize": "12px",
      "fontWeight": "normal",
      "fontFamily": "Arial",
      "color": "#000000"
    },
    "text": "",
    "align": "left"
  },
  "yAxis": {
    "lineColor": "white",
    "title": {
      "style": {
        "color": "#000000",
        "fontSize": null
      },
      "text": null
    },
    "labels": {
      "y": 11,
      "x": 0,
      "overflow": "justified",
      "style": {
        "color": "white",
        "textOverflow": "none",
        "fontSize": "10px"
      }
    },
    "min": 1,
    "max": 21.1,
    "endOnTick": false,
    "tickInterval": 7,
    "showFirstLabel": false,
    "showLastLabel": true,
    "gridLineInterpolation": "polygon",
    "lineWidth": 0,
    "gridLineColor": "white"
  },
  "credits": {
    "enabled": true,
    "style": {
      "color": "#000000",
      "fontSize": "10px",
      "cursor": "default"
    },
    "position": {
      "align": "left",
      "verticalAlign": "bottom",
      "x": 10,
      "y": -25
    },
    "text": "Quelle: Statistisches Amt Basel-Stadt.\u003Cbr\u002F\u003EZuletzt geändert: 13.10.2025"
  },
  "legend": {
    "enabled": false,
    "symbolRadius": 0
  },
  "tooltip": {
    "padding": 0,
    "useHTML": true,
    "formatter": function () {
        //individual units and numberFormat in tooltips, depending on series name
        var w,
          d = undefined,
          e = "",
          f = 1,
          t = " ";
        switch (this.point.name) {
          case "Altersquotient":
          case "Jugendquotient":
            d = 1;
            f = 100;
            break;
          case "Baujahr&nbsp;Wohngebäude":
            d = 0;
            t = "";
            break;
          case "Fläche&nbsp;pro&nbsp;Wohnung":
          case "Wohnfläche&nbsp;pro&nbsp;Kopf":
            d = 1;
            e = " m²";
            break;
          case "Vermögenssteuer":
          case "Einkommenssteuer":
            d = 0;
            e = " Fr.";
            break;
          case "Arbeitsplätze&nbsp;pro&nbsp;Kopf":
            d = 2;
            break;
          case (this.point.name.match(/anteil|quote/i) || {}).input:
            d = 1;
            e = "%";
            f = 100;
            break;
        }
        w = Highcharts.numberFormat(this.point.Wert * f, d, ",", t) + e;

        //fix html xAxis labels rendered above tooltip, see http://jsfiddle.net/g2j344z4/19/
        //replace "&nbsp;" by "\u00A0" to control line breaks in SVG without using html
        return (
          "" +
          '<div style= "display: block; background-color: #fff; padding:9px; margin-left: 1px; margin-top: 1px;">' +
          '<span style="font-size: 10px">' +
          this.point.Wohnviertel +
          "</span><br/>" +
          this.key.replace(/&nbsp;/g, "\u00A0").replace(/-/g, "") +
          " " +
          this.point.Jahr +
          ": <b>" +
          w +
          " </b> (Rang <b>" +
          this.point.y +
          "</b>)<br/>" +
          "</div>"
        );
      }
  },
  "exporting": {
    "allowHTML": false,
    "filename": "6633"
  }
}