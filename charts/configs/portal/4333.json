{
  "chart": {
    "renderTo": "container_0109",
    "type": "column",
    "width": "485",
    "height": "415",
    "spacingBottom": 50,
    "borderColor": "#fbfbfb",
    "backgroundColor": "#fbfbfb",
    "zoomType": "x",
    "panning": true,
    "panKey": "shift",
    "resetZoomButton": {
      "position": {
        "x": 0,
        "y": -30
      }
    },
    "events": {
      "redraw": function updateStacks() {
			//console.log(this.userOptions.series[0].stacking)

			//only if plot-type is column and stacking = percent
			if (this.userOptions.series[0].stacking == 'percent' || this.userOptions.series[0].stacking == 'normal') {
			  var chart = this,
				H = Highcharts,
				label,
				bbox,
				i, j=0;

			  for (var stackName in chart.yAxis[0].stacks) {
				i=0;
				for (var itemName in chart.yAxis[0].stacks[stackName]) {
					if (chart.yAxis[0].stacks[stackName][itemName].label){
					  label = chart.yAxis[0].stacks[stackName][itemName].label; // get stack item
					  bbox = label.getBBox(true); // get label's bounding box
					  
					  //console.log(label);
					  
					  //if more than 'max_labels' xAxis categories are actually shown in chart (also if zoomed)
					  var max_labels;
					  if (this.userOptions.series[0].stacking == 'percent') max_labels = 8;
					  else if (this.userOptions.series[0].stacking == 'normal') max_labels = 20;
					  
					  if (this.xAxis[0].max - this.xAxis[0].min > max_labels) { //formally: if (this.xAxis[0].categories.length > 8) {
						  if (i % 2 != 0) label.hide(); //hide every second label
						  if (this.userOptions.series[0].stacking == 'percent') {
							  if (j % 2 != 0) label.translate(-4) //move labels slightly to left or right
							  else label.translate(4)
						  }
					  }
					  
					  // if label is outside chart (left/right + 5), hide it
					  if (bbox.x < -5 || bbox.width + bbox.x - 5 > chart.plotWidth) {
						label.hide();
					  }
					}
				  i++;
				}
				j++;
			  }
			}
		},
      "load": function () {
								var label = this.renderer.label("> Indikator-Details",null,null,null,null,null,null,true)
								.css({
									cursor: 'pointer'
								})
								.attr({
									'padding': 0
								})
								.add().on('click',function(){
									 /*window.top.location.href = "?i=0109&format=ubdb&format_menu=1";*/
									 /*window.open("?i=0109&format=ub", "Indikator-Details");*/
									 /*window.open("http://www.test-mag.bs.ch/umweltberichtbeiderbasel/indikatoren/TID/0109.html", "Indikator-Details");*/
									 window.top.location.href = "http://www.umweltberichtbeiderbasel.bs.ch/indikatoren-01-0109", "Indikator-Details";
								});
						
								label.align(Highcharts.extend(label.getBBox(), {
									align: 'left',
									verticalAlign: 'bottom',
									x: 0,
									y: 100
								}), null, 'spacingBox');
								
								/*add tooltip to legend items
								for (var i = 0, len = this.legend.allItems.length; i < len; i++) {
									(function(i) {
										var item = this.legend.allItems[i].legendItem;
										item.on('mouseover', function (e) {
											//show custom tooltip here
											console.log("mouseover" + i);
										}).on('mouseout', function (e) {
											//hide tooltip
											console.log("mouseout" + i);
										});
									})(i);
								}*/

								
								/* remove link from credits */
								if (this.credits) {
									this.credits.element.onclick = function() {
										//window.open("http://www.statistik.bs.ch", '_blank'); // http://stackoverflow.com/questions/16810556/how-to-open-credits-url-of-highcharts-in-new-tab
									}
								}
							}
    }
  },
  "title": {
    "text": "Sonderabfälle",
    "align": "left",
    "style": {
      "fontSize": "1.1em",
      "fontWeight": "bold",
      "color": "#000000"
    }
  },
  "subtitle": {
    "text": "Tonnen",
    "align": "left",
    "style": {
      "fontSize": "0.9em",
      "color": "#000000"
    }
  },
  "xAxis": {
    "categories": [
      2006,
      2007,
      2008,
      2009,
      2010,
      2011,
      2012,
      2013,
      2014,
      2015
    ],
    "floor": 0,
    "ceiling": 9,
    "tickLength": 0,
    "title": {
      "enabled": false,
      "text": "Jahr"
    },
    "labels": {
      "style": {
        "fontSize": "0.9em",
        "color": "#000000"
      }
    },
    "range": false
  },
  "yAxis": [
    {
      "min": 0,
      "title": {
        "enabled": true,
        "text": "",
        "style": {
          "fontSize": "0.9em",
          "color": "#000000"
        },
        "align": "middle"
      },
      "labels": {
        "enabled": true,
        "overflow": "justify",
        "style": {
          "fontSize": "0.9em",
          "color": "#000000"
        },
        "formatter": function () {
						  /* workaround: add Suffix if necessary. get the already formatted string (e.g. thousands separator included) and add suffix. format: '{value:,.0f}' doesn't work with string-labels (e.g. 1613). BL/22.3.2017 */
						  return this.axis.defaultLabelFormatter.call(this) + '';
						}
      },
      "index": 0
    },
    {
      "opposite": true,
      "min": 0,
      "title": {
        "enabled": true,
        "text": "",
        "style": {
          "fontSize": "0.9em",
          "color": "#000000"
        },
        "align": "middle"
      },
      "labels": {
        "enabled": true,
        "overflow": "justify",
        "style": {
          "fontSize": "0.9em",
          "color": "#000000"
        }
      },
      "index": 1
    }
  ],
  "tooltip": {
    "style": {
      "fontSize": "1em"
    },
    "hideDelay": 200,
    "headerFormat": "\u003Cspan style=\"width: 80px\"\u003E\u003Cspan style=\"color:{point.color}; width: 10px; font-size: 1.8em;\"\u003E■\u003C\u002Fspan\u003E\u003Cspan style=\"font-size: 1em;\"\u003E {series.name}\u003C\u002Fspan\u003E\u003Cbr\u003E\u003Cspan style=\"padding-left: 15px; line-height: 1.4em;\"\u003E{point.key}:",
    "pointFormat": " \u003Cb\u003E{point.y}\u003C\u002Fb\u003E t (von {point.stackTotal: ,2f})\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E",
    "footerFormat": "",
    "useHTML": true
  },
  "plotOptions": {
    "bar": {
      "dataLabels": {
        "enabled": true
      }
    },
    "series": {
      "stacking": "normal",
      "connectNulls": true,
      "stickyTracking": false,
      "borderWidth": 0,
      "marker": {
        "enabled": false,
        "radius": 3
      }
    },
    "column": {
      "pointPlacement": null
    }
  },
  "legend": {
    "enabled": true,
    "floating": false,
    "layout": "horizontal",
    "align": "left",
    "verticalAlign": "top",
    "padding": 12,
    "borderWidth": 0,
    "backgroundColor": "none",
    "shadow": false,
    "itemMarginBottom": 5,
    "symbolRadius": 0,
    "itemStyle": {
      "fontWeight": "normal",
      "fontSize": "1em"
    }
  },
  "credits": {
    "enabled": true,
    "text": "Quelle: Amt für Umwelt und Energie Basel-Stadt; Amt für Umweltschutz und Energie Basel-Landschaft",
    "style": {
      "color": "#000000",
      "fontSize": "0.8em",
      "cursor": "default",
      "width": "465px"
    },
    "position": {
      "align": "left",
      "verticalAlign": "bottom",
      "x": 10,
      "y": -15
    }
  },
  "navigation": {
    "buttonOptions": {
      "theme": {
        "stroke-width": 1,
        "stroke": "#eee",
        "r": 3,
        "states": {
          "hover": {
            "fill": "#ddd"
          },
          "select": {
            "stroke": "#444",
            "fill": "#ddd"
          }
        }
      }
    },
    "menuStyle": {},
    "menuItemStyle": {
      "padding": "3px 12px"
    }
  },
  "rangeSelector": {
    "enabled": false
  },
  "scrollbar": {
    "enabled": false
  },
  "navigator": {
    "enabled": false,
    "series": {
      "type": "column",
      "stacking": "normal",
      "includeInCSVExport": false
    },
    "xAxis": {
      "gridLineWidth": 0,
      "labels": {
        "enabled": false
      }
    }
  },
  "series": [
    {
      "includeInCSVExport": true,
      "stacking": "normal",
      "stack": "BS",
      "type": "column",
      "showInNavigator": true,
      "name": "Klasse 4 (Mineralische Abfälle)",
      "color": "#FF8028",
      "id": "BS0109_1",
      "valueSuffix": "Tonnen",
      "data": [
        25918,
        47044.2,
        51851.7,
        42250.7,
        44938.7,
        136370.3,
        113465.4,
        67974.7,
        156178.6,
        89427.6
      ],
      "visible": true
    },
    {
      "includeInCSVExport": true,
      "stacking": "normal",
      "stack": "BS",
      "type": "column",
      "showInNavigator": true,
      "name": "Übrige Abfallklassen",
      "color": "#DC440E",
      "id": "BS0109_2",
      "valueSuffix": "Tonnen",
      "data": [
        54929.6,
        66810.9,
        55727.2,
        50964,
        51406.5,
        50474.8,
        51947.7,
        51808.4,
        45998.4,
        43700.3
      ],
      "visible": true
    }
  ]
}