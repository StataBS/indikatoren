{
  "series": [
    {
      "color": "#6F6F6F",
      "legendIndex": 2,
      "data": [
        [
          2008,
          20
        ],
        [
          2009,
          22
        ],
        [
          2010,
          23
        ],
        [
          2011,
          22
        ],
        [
          2012,
          24
        ],
        [
          2013,
          26
        ],
        [
          2014,
          26
        ],
        [
          2015,
          25
        ],
        [
          2016,
          27
        ]
      ],
      "name": "Basel"
    },
    {
      "color": "#923F8D",
      "legendIndex": 2,
      "data": [
        [
          2008,
          29
        ],
        [
          2009,
          33
        ],
        [
          2010,
          36
        ],
        [
          2011,
          36
        ],
        [
          2012,
          36
        ],
        [
          2013,
          37
        ],
        [
          2014,
          36
        ],
        [
          2015,
          33
        ],
        [
          2016,
          36
        ]
      ],
      "name": "Genf"
    },
    {
      "color": "#008AC3",
      "legendIndex": 2,
      "data": [
        [
          2008,
          26
        ],
        [
          2009,
          28
        ],
        [
          2010,
          29
        ],
        [
          2011,
          29
        ],
        [
          2012,
          29
        ],
        [
          2013,
          30
        ],
        [
          2014,
          30
        ],
        [
          2015,
          29
        ],
        [
          2016,
          31
        ]
      ],
      "name": "Zürich"
    },
    {
      "color": "#007A2F",
      "legendIndex": 0,
      "data": [
        [
          2008,
          17
        ],
        [
          2009,
          20
        ],
        [
          2010,
          30
        ],
        [
          2011,
          31
        ],
        [
          2012,
          22
        ],
        [
          2013,
          18
        ],
        [
          2014,
          18
        ],
        [
          2015,
          18
        ],
        [
          2016,
          20
        ]
      ],
      "name": "Bern"
    }
  ],
  "chart": {
    "events": {
      "load": function () {
              this.credits.element.onclick = function() {};
              
              //for top-left legends with no x defined: move legend to x position of first yAxis
              if (this['legend']['options']['align'] == 'left' && this['legend']['options']['verticalAlign'] == 'top' && this['legend']['options']['x'] == 0){
                this.update(
                  {
                    legend: {
                      x: this.yAxis[0].left - this.spacingBox.x - this.legend.padding
                    }
                  }
                );
              }              
          }
    },
    "borderColor": "#fbfbfb",
    "backgroundColor": "#fbfbfb",
    "zoomType": "xy",
    "width": 485,
    "height": 428,
    "spacingBottom": 55,
    "style": {
      "fontFamily": "Arial"
    },
    "type": "line",
    "renderTo": "container-6156"
  },
  "title": {
    "style": {
      "fontSize": "14px",
      "fontWeight": "bold",
      "color": "#000000"
    },
    "align": "left",
    "text": "Jährlich durch Stau generierte Verzögerungszeit"
  },
  "subtitle": {
    "style": {
      "fontSize": "12px",
      "fontWeight": "normal",
      "fontFamily": "Arial",
      "color": "#000000"
    },
    "text": "Basel im nationalen Vergleich",
    "align": "left"
  },
  "tooltip": {
    "shared": false,
    "pointFormat": "\u003Cspan style=\"color:{series.color}\"\u003E●\u003C\u002Fspan\u003E {series.name}: \u003Cb\u003E{point.y}\u003C\u002Fb\u003E%\u003Cbr\u002F\u003E"
  },
  "yAxis": {
    "min": 0,
    "gridLineColor": "#B9CFD7",
    "gridLineWidth": 0.5,
    "title": {
      "style": {
        "color": "#000000",
        "fontSize": null
      },
      "text": null
    },
    "labels": {
      "style": {
        "color": "#000000"
      },
      "format": "{value}%"
    }
  },
  "xAxis": {
    "lineColor": "#B9CFD7",
    "lineWidth": 0.5,
    "labels": {
      "style": {
        "color": "#000000",
        "textOverflow": "none"
      }
    },
    "tickLength": 0,
    "tickInterval": 1
  },
  "credits": {
    "href": "http:\u002F\u002Fwww.statistik.bs.ch",
    "enabled": true,
    "style": {
      "color": "#000000",
      "fontSize": "10px",
      "cursor": "default"
    },
    "position": {
      "align": "left",
      "verticalAlign": "bottom",
      "x": 10,
      "y": -25
    },
    "text": "Quelle: TomTom International.\u003Cbr\u002F\u003EZuletzt geändert: 2018-10-3"
  },
  "legend": {
    "enabled": true,
    "layout": "horizontal",
    "verticalAlign": "top",
    "align": "left",
    "symbolRadius": 0,
    "itemStyle": {
      "fontWeight": "normal"
    },
    "itemWidth": 150,
    "itemMarginBottom": 5
  },
  "plotOptions": {
    "series": {
      "marker": {
        "enabled": false
      }
    },
    "line": {
      "marker": {
        "enabled": false,
        "symbol": "circle"
      }
    }
  },
  "customFunctions": {
    "optimalAxisLabelDecimals": function (axis, formatString){
          
          //see https://forum.highcharts.com/highcharts-usage/how-to-have-all-yaxis-labels-show-same-number-of-decimals-t40826/ 
        	//function checks how many decimal places has a number
          var countDecimals = function(value) {
            if ((value % 1) != 0)
              return value.toString().split(".")[1].length;
            return 0;
          };
          
          var ticks = axis.tickPositions;
          var howManyDecimals = 0;
					
          //loop looks for the the largest number of decimal places
          ticks.forEach(function(tick) {
            if (countDecimals(tick) > howManyDecimals) {
              howManyDecimals = countDecimals(tick);
            }
          });
					
					
          //update labels so they have the same number of decimal places
          axis.chart.update({
            yAxis: [{
              labels: {
                //format: '{value:,.' + howManyDecimals + 'f}',
                format: formatString.replace('howManyDecimals', howManyDecimals),
              }
            }, {
            	//second yAxis, if present
            }]
          }, true, true);
    }
  },
  "exporting": {
    "filename": 6156
  }
}