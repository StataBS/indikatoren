{
  "name": "indikatoren",
  "version": "1.0.0",
  "description": "Indikatorenportal Statistisches Amt Basel-Stadt",
  "dependencies": {
    "bootstrap": "3.3.7",
    "bootstrap-multiselect": "0.9.13-1",
    "highcharts": "5.0.7",
    "jquery": "3.1.1",
    "proj4": "2.4.3",
    "seedrandom": "2.4.2",
    "filter-js": "git://github.com/statabs-test/filter.js.git#e2447aaea9e5b6581a98778c4177fbdf3d1a2936"
  },
  "devDependencies": {
    "casperjs": "1.1.4",
    "copy-node-modules": "1.0.2",
    "forever": "0.15.3",
    "gh-pages-travis": "1.0.0",
    "glob": "7.1.1",
    "hash-files": "1.1.1",
    "highcharts-export-server": "2.0.2",
    "http-server": "0.9.0",
    "jsdom": "9.8.0",
    "jsondiffpatch": "0.2.4",
    "rimraf": "2.5.4",
    "serialize-javascript": "1.3.0",
    "svgo": "0.7.2"
  },
  "scripts": {
    "reinstall": "rm -rf node_cache && rm -rf node_modules && npm install && LC_ALL=C",
    "build:database": "node build/createJsonDatabase",
    "build:find_changed_charts": "echo 'Comparing checksums of current files with those created after last build...' &&node build/findChangedCharts.js",
    "build:partial_databases": "node build/createKennzahlensetJsonFiles.js",
    "build:charts": "node build/createChartConfigs",
    "build:images": "node build/exportChartImages",
    "build:images_casper": "npm run server && node node_modules/casperjs/bin/casperjs.js build/createImagesCasper.js && npm run stop-server",
    "build:images_viewbox": "node build/addSvgViewbox.js",
    "build:umwelt_charts": "node node_modules/casperjs/bin/casperjs.js build/createUmweltberichtConfigs.js",
    "build:init_print_charts": "node createMissingPrintChartsFromMetadata.js",
    "build:optimize_images": "echo 'Optimizing svg images...' && node build/optimizeImages.js && echo '...done optimizing images!'",
    "build:optimize_all_images": "echo 'Optimizing svg images...' && svgo --pretty --multipass -f images/portal/ && svgo --pretty --multipass -f images/indikatorenset/ && echo '...done optimizing images!'",
    "build:save_checksums": "echo 'Saving checksums of newly built charts...' && node build/saveChecksums.js",
    "build:copy_modules": "echo 'Copying required node_modules to assets/js/modules...' && copy-node-modules . assets/js -v && rm -rf assets/js/modules && mv assets/js/node_modules assets/js/modules && echo 'Manually copying filter.js...' &&  cp -r node_modules/filter.js assets/js/modules/",
    "build": "LC_ALL=C && npm run build:database && npm run build:find_changed_charts && npm run build:partial_databases && npm run build:charts && npm run build:images  && npm run build:images_viewbox && npm run build:optimize_images && npm run build:save_checksums && npm run build:copy_modules",
    "rebuild": "LC_ALL=C && echo 'Deleting metadat/all/hashesAfterBuild.json in order to trigger build of all charts...' && rm metadata/all/hashesAfterBuild.json & echo 'Running npm run build...' && npm run build",
    "build:update_dependencies": "reinstall && npm prune --production=false && npm update --dev",
    "test": "echo \"No test specified\" && exit 0",
    "server": "forever start ./node_modules/http-server/bin/http-server -p 8082 -c-1 -s -o",
    "start": "npm run build && npm run server",
    "stop-server": "forever stop ./node_modules/http-server/bin/http-server",
    "deploy:gh-pages": "gh-pages-travis",
    "deploy:ftp": "echo \"Fake uploading to FTP server...\" && exit 0",
    "deploy": "npm run deploy:gh-pages && npm run deploy:ftp && pwd",
    "start-export-server": "echo 'Starting highcharts-export-server using forever...' && forever start node_modules/highcharts-export-server/bin/cli.js --enableServer 1 --port 8081 --killSignal SIGINT",
    "stop-export-server": "echo 'stopping highcharts-export-server...' &&forever stop node_modules/highcharts-export-server/bin/cli.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/statabs/indikatoren"
  },
  "author": "Jonas Bieri",
  "bugs": {
    "url": "https://github.com/statabs/indikatoren/issues"
  },
  "homepage": "http://www.statistik.bs.ch/zahlen/indikatoren/"
}
